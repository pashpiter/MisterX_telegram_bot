import database as db
import logging
import os

from aiogram import Bot, Dispatcher, asyncio, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv('TELEGRAM_TOKEN')
ID_MY = int(os.getenv('MY_ID'))

# Configure logging
logging.basicConfig(level=logging.INFO,
                    format="%(asctime)s %(levelname)s %(message)s",
                    handlers=[
                        logging.FileHandler(
                            filename='bot_log.log', mode='w', encoding='UTF-8')
                        ])

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())


class Form(StatesGroup):
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"""
    answer = State()


# Reply Keyboard –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
markup = types.ReplyKeyboardMarkup(
    resize_keyboard=True, one_time_keyboard=False
)
location = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)
markup.add(location)

# –£–±—Ä–∞—Ç—å Reply Keyboard
hide_kb = types.ReplyKeyboardRemove()


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message) -> types.Message:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    await message.reply(
        text=f'–ü—Ä–∏–≤–µ—Ç {message.chat.username}! '
        '–ù—É–∂–Ω–æ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å'
    )


@dp.message_handler(commands=['help'])
async def help_command(message: types.Message) -> types.Message:
    """–ü–æ–º–æ—â—å"""
    await Form.answer.set()
    key_help = types.InlineKeyboardButton(
        text='–û—Ç–º–µ–Ω–∞', callback_data='cancel'
    )
    kb = types.InlineKeyboardMarkup()
    kb.add(key_help)
    await send_reply_text(
        message.chat.id, '–°–ª–µ–¥—É—é—â—É–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∫—É',
        message.message_id, kb
    )


@dp.message_handler(state=Form.answer)
async def forward_answer(
    message: types.Message, state: FSMContext
) -> types.Message:
    """–õ–æ–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ help"""
    await message.forward(ID_MY)
    await bot.edit_message_reply_markup(message.chat.id, message.message_id-1)
    await state.finish()


@dp.message_handler(content_types=['location'])
async def get_location(message: types.Message) -> None:
    """–ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞—Ü–∏—é –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ"""
    await choose_location(
        message, message.location.latitude, message.location.longitude
    )


@dp.message_handler(
    lambda message: message.chat.id == ID_MY and message.reply_to_message,
    content_types=['text']
)
async def send_msg_from_me_to_user(message: types.Message) -> None:
    """–û—Ç–≤–µ—Ç –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await bot.send_message(
        message.reply_to_message.chat.id, message.text,
        reply_to_message_id=message.reply_to_message.message_id
    )


@dp.message_handler(content_types=['text'])
async def get_text(message: types.Message) -> None:
    """–ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ"""
    text = message.text.lower()
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 f'send text "{text}"')
    if text == '–±–∏–æ–º–∞—Ç–µ—Ä–∏–∞–ª':
        await first_message(message)
    elif text == '–Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∫–∞–∂–¥—ã–º –º–æ–º–µ–Ω—Ç–æ–º':
        await right_code_phrase(message)
    else:
        await send_text(message, '–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, –Ω–æ —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
                                 ' –ø–µ—Ä–µ–¥–∞–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫—É–¥–∞ —Å–ª–µ–¥—É–µ—Ç. –ú–æ–∂–µ—à—å'
                                 ' –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è /help –¥–ª—è —Å–≤—è–∑–∏ —Å '
                                 '—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º'
                        )


@dp.message_handler(content_types=['sticker'])
async def get_sticker(message: types.Message) -> types.Message:
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä"""
    await message.answer_sticker(message.sticker.file_id)


@dp.callback_query_handler(
    lambda call: call.data == 'cancel', state=Form.answer
)
async def cancel_callback(
    call: types.CallbackQuery, state: FSMContext
) -> None:
    """–û—Ç–º–µ–Ω—è–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"""
    await state.finish()
    await call.message.delete()


@dp.callback_query_handler(lambda call: True)
async def get_callback(call: types.CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –æ—Ç Inline Keyboard"""
    if call.data == 'help_loc_3':
        await help_loc_3(call.message)
    elif call.data == 'help_loc_4':
        await help_loc_4(call.message)
    elif call.data == 'help_loc_5':
        await help_loc_5(call.message)
    elif call.data == 'help_loc_8':
        await help_loc_8(call.message)
    elif call.data == 'hochu':
        await hochu(call.message)
    elif call.data == 'nehochu':
        await nehochu_final(call.message)
    elif call.data in ('st', 'pl', 'sel', 'photo', 'waiter'):
        await task_location_seven(call.message, call.data)
    elif call.data in ('tamila', 'jhon', 'bill', 'kevin'):
        await task_location_nine(call.message, call.data)


async def choose_location(
    message: types.Message, lat: float, lon: float
) -> None:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ª–æ–∫–∞—Ü–∏—é"""
    if 59.909 <= lat <= 59.914 and 30.304 <= lon <= 30.308:
        text = '–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è'
        await send_text(message, text)
    elif 59.9615 <= lat <= 59.9633 and 30.3023 <= lon <= 30.3056:
        await location_one(message)
    elif 59.9578 <= lat <= 59.9584 and 30.2865 <= lon <= 30.2886:
        await location_two(message)
    elif 59.9534 <= lat <= 59.954 and 30.2892 <= lon <= 30.2912:
        await location_three(message)
    elif 59.9554 <= lat <= 59.9562 and 30.298 <= lon <= 30.3:
        await location_four(message)
    elif 59.9518 <= lat <= 59.9529 and 30.2992 <= lon <= 30.3012:
        await location_five(message)
    elif 59.9513 <= lat <= 59.9523 and 30.3054 <= lon <= 30.3071:
        await location_six(message)
    elif 59.9569 <= lat <= 59.9576 and 30.315 <= lon <= 30.317:
        await location_seven(message)
    elif 59.9564 <= lat <= 59.9568 and 30.3203 <= lon <= 30.3217:
        await location_seven(message, second=True)
    elif 59.9614 <= lat <= 59.9624 and 30.3123 <= lon <= 30.3135:
        await location_eight(message)
    elif 59.9642 <= lat <= 59.9647 and 30.3108 <= lon <= 30.3118:
        await location_nine(message)
    else:
        logging.info(f'User {message.chat.id}, {message.chat.username}'
                     f' lat = {lat}, long = {lon}')
        await send_text(message, text='–ù–µ –ø–æ—Ö–æ–∂–µ —á—Ç–æ —Ç—ã –Ω–∞ –º–µ—Å—Ç–µ')


async def location_one(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 1"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 1')
    await send_text(
        message, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –Ω–∞ –ø–µ—Ä–≤–æ–π –ª–æ–∫–∞—Ü–∏–∏! –≠—Ç–æ –¥–≤–æ—Ä –ù–µ–ª—å—Å–æ–Ω–∞, '
        '–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã'
    )
    await send_text(
        message, '–ò –≤–µ—Ä–Ω–µ–º—Å—è –∫ –¥–µ–ª—É. –ù–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –Ω–∞–º —É–¥–∞–ª–æ—Å—å '
        '–ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ _–ú–∏—Å—Ç–µ—Ä–∞ –•_:\n\n*–û–¥–Ω–∞ –∏–∑ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ'
        ' –∞–¥—Ä–µ—Å—É –ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞ 22*'
    )
    await send_photo(
        message, 'https://img.the-village.ru/4kNSEWjYk4QPhPSdbGveLGPr8CnK3wje'
        '2OCy3QrTM1Y/rs:fill:620:415/q:88/plain/post-image_featured/Dlk8pFHJK'
        'aVBTf3rd8VNrw.png'
    )
    await send_text(
        message, '–ò –∫–∞–∫ –ø—Ä–∏–±—É–¥–µ—à—å –Ω–∞ –ª–æ–∫–∞—Ü–∏—é - –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å '
        '–ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá', markup
    )


async def location_two(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 2"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 2')
    await send_text(
        message, '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ "–ü–æ–∫–æ—Ä–µ–Ω–∏–µ –Ω–µ–±–∞ –∏ '
        '–∫–æ—Å–º–æ—Å–∞"'
    )
    await send_text(
        message, '–¢–∞–∫–∂–µ –ø–æ —ç—Ç–æ–π –≥–µ–æ—Ç–æ—á–∫–µ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n–°–ª–æ–≤–æ '
        '–¥–ª—è —à–∏—Ñ—Ä–∞: *"–î–∞—Ç—á–∏–∫"*\n\n–î–∞–ª—å—à–µ —Å–ª–µ–¥—É–π –≤–æ –¥–≤–æ—Ä –ø–æ –∞–¥—Ä–µ—Å—É: _–ú–∞–ª—ã–π '
        '–ø—Ä–æ—Å–ø–µ–∫—Ç –ü.–°. 1–ë_'
    )
    await send_photo(
        message, 'http://risovach.ru/upload/2020/07/mem/hochu-obnimashek_2443'
        '97878_orig_.jpg'
    )
    await send_text(
        message, '–ö–∞–∫ –ø—Ä–∏–±—É–¥–µ—à—å –Ω–∞ –ª–æ–∫–∞—Ü–∏—é - –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å '
        '–ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá', markup
    )


async def location_three(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 3"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 3')
    await send_text(message, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–æ—Å—å–º–∏—É–≥–æ–ª—å–Ω—ã–π –¥–≤–æ—Ä –∫–æ–ª–æ–¥–µ—Ü!')
    await send_text(
        message, '–ò–¥—ë–º –ø–æ –ø—è—Ç–∞–º _–ú–∏—Å—Ç–µ—Ä–∞ –•_, –≤–æ—Ç —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:\n*5 4 30 25 '
        '10 4\n 15 14 10 25 10\n33 1 15 14 1 22 24 1 23 15 35*\n\n–ò –≤–æ—Ç –µ—â—ë:'
    )
    await send_text(message, '*59.955998, 30.298809*')
    await send_photo(
        message, 'https://lh3.googleusercontent.com/proxy/raysuDMEM2Tpy7JR90E'
        'qf0IGP5St_mOl3G5AlFQEOlfXNllNx9JuCrMa4TEJPmcdWR7-YRzWnccWSUJrZS-EKZa'
        'TMDo'
    )
    key_help = types.InlineKeyboardButton(
        text='–ü–æ–º–æ—â—å', callback_data='help_loc_3'
    )
    kb = types.InlineKeyboardMarkup()
    kb.add(key_help)
    await asyncio.sleep(7)
    await edit_reply_markup(message.chat.id, message.message_id + 2, kb)


async def location_four(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 4"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 4')
    await send_text(
        message, '–ù–∞ —É–≥–ª—É –¥–æ–º–∞ 10 –ø–æ –ë–æ–ª—å—à–æ–π –ü—É—à–∫–∞—Ä—Å–∫–æ–π –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–∞–º—è—Ç–Ω—É—é '
        '—Ç–∞–±–ª–∏—á–∫—É —Å —Ç–µ–º, –∫–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã –±—ã–ª –≤ –≥–æ—Ä–æ–¥–µ –≤ 1924 –≥–æ–¥—É'
    )
    await send_text(
        message, '–ú—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ç–æ –ª–æ–∫–∞—Ü–∏—è '
        'ü§îü§îü§î:\n\n*—è–æ—Ü–∞—Ä–æ—Ç–∫–∏–≤—Ä–µ–≤–∫—Å*'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/avajjz44qfu0bdk/%D0%BF%D0%B8%D0%'
        'BA%D0%B0%D1%87%D1%83.jpg'
    )
    await asyncio.sleep(30)
    key_help = types.InlineKeyboardButton(
        text='–ü–æ–º–æ—â—å', callback_data='help_loc_4'
    )
    kb = types.InlineKeyboardMarkup()
    kb.add(key_help)
    await edit_reply_markup(message.chat.id, message.message_id + 2, kb)


async def location_five(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 5"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 5')
    await send_text(
        message, '–¢—ã –Ω–∞ –º–µ—Å—Ç–µ! –≠—Ç–æ —Å–∫–≤–µ—Ä –í–∏–∫—Ç–æ—Ä–∞ –¶–æ—è. \n _–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–≤–µ—Ä—É '
        '–±—ã–ª–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ 20 —Å–µ–Ω—Ç—è–±—Ä—è 2012 –≥–æ–¥–∞. –°–∫–≤–µ—Ä –±—ã–ª –≤—ã–±—Ä–∞–Ω –≤ —Å–≤—è–∑–∏ —Å —Ç–µ–º,'
        ' —á—Ç–æ –ø–µ–≤–µ—Ü –í–∏–∫—Ç–æ—Ä –¶–æ–π —Ç—Ä—É–¥–∏–ª—Å—è –Ω–µ–ø–æ–¥–∞–ª–µ–∫—É ‚Äî –≤ –∫–æ—Ç–µ–ª—å–Ω–æ–π ¬´–ö–∞–º—á–∞—Ç–∫–∞¬ª '
        '(—É–ª–∏—Ü–∞ –ë–ª–æ—Ö–∏–Ω–∞ 15, —Å–æ–≤–µ—Ç—É—é –∑–∞–π—Ç–∏ –≤ —ç—Ç–æ—Ç –¥–≤–æ—Ä, —ç—Ç–æ –≤ —Å—Ç–∞ –º–µ—Ç—Ä–∞—Ö '
        '–æ—Ç—Å—é–¥–∞). –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ —Å–∫–≤–µ—Ä —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –∫—Ä—ã—à–µ '
        '–±–æ–º–±–æ—É–±–µ–∂–∏—â–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ –æ–∫–æ–ª–æ 1,5 –º–µ—Ç—Ä–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ–∫—Ä—É–∂–∞—é—â–µ–≥–æ '
        '–ª–∞–Ω–¥—à–∞—Ñ—Ç–∞. –ü–æ—Å–ª–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è —Å–∫–≤–µ—Ä—É –∏–º–µ–Ω–∏ –í–∏–∫—Ç–æ—Ä–∞ –¶–æ—è –æ–Ω –Ω–µ —Ä–∞–∑ '
        '—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ø–ª–æ—â–∞–¥–∫–æ–π —É–ª–∏—á–Ω—ã—Ö —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ–π._ @wikipedia\n–¢–∞–∫–∂–µ, –µ—Å–ª–∏ '
        '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∫–≤–µ—Ä —Å–≤–µ—Ä—Ö—É, –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å–∫—Ä–∏–ø–∏—á–Ω—ã–π –∫–ª—é—á (–≤ '
        '–∑–µ—Ä–∫–∞–ª—å–Ω–æ–º –æ—Ç—Ä–∞–∂–µ–Ω–∏–∏).'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/1ltnn9icltrd3xp/%D1%81%D0%BA%D0%B2'
        '%D0%B5%D1%80%20%D0%B2%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%B0%20%D1%86%D0'
        '%BE%D1%8F.jpg')
    await send_text(message, '–í—Ç–æ—Ä–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: *–ü–ë–©–¨–î–ß*')
    await send_text(
        message, '–≠—Ç–æ –≤—Å–µ —á—Ç–æ –µ—Å—Ç—å, –ø–æ–ø—Ä–æ–±—É–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏, '
        '–∫–æ—Ç–æ—Ä—ã–µ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å, —á—Ç–æ–±—ã —Ä–∞–∑–≥–∞–¥–∞—Ç—å'
    )
    await asyncio.sleep(10)
    await send_text(
        message, '–°–ª–µ–¥—É—é—â–∞—è –ª–æ–∫–∞—Ü–∏—è –ú–∏—Å—Ç–µ—Ä–∞ –• –Ω–∞—Ö–æ–¥–∏—Ç—Å—è *–Ω–∞ –≤—Ö–æ–¥–µ –≤ '
        '–≠–∫–∑–æ—Ç–∞—Ä–∏—É–º*'
    )
    await send_photo(
        message, 'https://upload.wikimedia.org/wikipedia/commons/4/4d/Zoo_SPB_'
        'entrance.jpg'
    )
    await asyncio.sleep(40)
    key_help = types.InlineKeyboardButton(
        text='–ü–æ–º–æ—â—å', callback_data='help_loc_5'
    )
    kb = types.InlineKeyboardMarkup()
    kb.add(key_help)
    await edit_reply_markup(message.chat.id, message.message_id + 3, kb)


async def location_six(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 6"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 6')
    await send_text(
        message, '–≠—Ç–æ –æ–¥–Ω–∏ –∏–∑ –≤—Ö–æ–¥–æ–≤ –≤ –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫. –ò—Å—Ç–æ—Ä–∏—è –∑–≤–µ—Ä–∏–Ω—Ü–∞'
        ' –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ 1865 –≥–æ–¥—É, –∫–æ–≥–¥–∞ –ª—é–±–∏—Ç–µ–ª–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö –°–æ—Ñ—å—è –∏ –Æ–ª–∏—É—Å '
        '–ì–µ–±–≥–∞—Ä–¥—Ç –æ—Ç–∫—Ä—ã–ª–∏ –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞. –ó–∞—Ç–µ–º –æ–Ω —Å–º–µ–Ω–∏–ª '
        '–º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∞—Å—Ç–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –≤ 1918 –≥–æ–¥—É –∑–æ–æ—Å–∞–¥ –±—ã–ª '
        '–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í–æ –≤—Ä–µ–º—è –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ '
        '–∑–æ–æ—Å–∞–¥–∞ –≤ —Ç—è–∂–µ–ª–µ–π—à–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –Ω–µ –ø—Ä–µ–∫—Ä–∞—â–∞–ª–∏ —Ä–∞–±–æ—Ç—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ '
        '–∂–∏–≤–æ—Ç–Ω—ã—Ö.\n–≠—Ç–æ –æ–¥–∏–Ω –∏–∑ —Å–µ—Ä–µ–≤–Ω—ã—Ö –∑–æ–æ–ø–∞—Ä–∫–æ–≤ –º–∏—Ä–∞, –≥–¥–µ —Å–æ–¥–µ—Ä–∞–∂—Ç—Å—è –æ–∫–æ–ª–æ '
        '600 –≤–∏–¥–æ–≤ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏—Ö, –ø—Ç–∏—Ü, —Ä—ã–± –∏ –±–µ—Å–ø–æ–∑–≤–æ–Ω–æ—á–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤'
        ' –ó–µ–º–ª–∏.'
    )
    await send_text(
        message, '–ò—Ç–∞–∫, –≤–µ—Ä–Ω–µ–º—Å—è –∫ –ø–æ–∏—Å–∫—É. –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —à–∏—Ñ—Ä —Å –∫–≤–∞–¥—Ä–∞—Ç–∞–º–∏, '
        '—Ä–∞—Å—Å—Ç–∞–≤—å –Ω–∞ –Ω–µ–º —Ñ–∏–≥—É—Ä—ã —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –∫–∞–∂–¥–æ–º —Å—Ç–æ–ª–±—Ü–µ, —Å—Ç—Ä–æ–∫–µ –∏ –≤ –∫–∞–∂–¥–æ–º'
        ' –∫–≤–∞–¥—Ä–∞—Ç–µ —Å –¥–≤–æ–π–Ω–æ–π –≥—Ä–∞–Ω–∏—Ü–µ–π –±—ã–ª–∏ —Ä–∞–∑–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã, –∫–∞–∫ –≤ *—Å—É–¥–æ–∫—É*, '
        '—Ç–æ–ª—å–∫–æ —Å —Ñ–∏–≥—É—Ä–∞–º–∏. –û—Å—Ç—Ä–∏–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–Ω—ã —Å–º–æ—Ç—Ä–µ—Ç—å –≤–≤–µ—Ä—Ö. –ó–∞—Ç–µ–º '
        '—Å–æ–ø–æ—Å—Ç–∞–≤—å —Å—É–¥–æ–∫—É —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ –ø–æ–¥—Å–∫–∞–∂—É—Ç —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â–µ–µ '
        '–º–µ—Å—Ç–æ, –∫—É–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è.'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/nnhduqih57oq5x4/%D0%91%D0%B5%D0%B7'
        '%D1%8B%D0%BC%D1%8F%D0%BD%D0%BD%D1%8B%D0%B9%201.jpg'
    )


async def location_seven(message: types.Message, second: bool = False) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 7"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 7')
    if not second:
        await send_text(
            message, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –≠—Ç–æ –∏ –µ—Å—Ç—å —Ç–∞ —Ç–æ—á–∫–∞! –≠—Ç–æ –ø–æ—Å—Ç—Ä–æ–π–∫–∞ 1953 –≥. –æ '
            '—á–µ–º —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É–µ—Ç –¥–∞—Ç–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–æ–Ω–µ.'
        )
    elif second:
        await send_text(
            message, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –≠—Ç–æ –∏ –µ—Å—Ç—å —Ç–∞ —Ç–æ—á–∫–∞! –≠—Ç–æ –ø–æ—Å—Ç—Ä–æ–π–∫–∞ 1879 –≥., –≤'
            ' —ç—Ç–æ–º –¥–æ–º–µ, –≤ —Ä–∞–∑—ã–Ω–µ –ø–µ—Ä–∏–æ–¥—ã –∂–∏–ª–∏: –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –ì. –í. –í–æ–π–Ω–µ–≤–∏—á, –∞ '
            '—Ç–∞–∫–∂–µ –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä, –º—É–∑—ã–∫–∞–Ω—Ç, –∞–≤—Ç–æ—Ä —Å–ª–æ–≤ –∏ –º—É–∑—ã–∫–∏ –º–Ω–æ–≥–∏—Ö –ø–µ—Å–µ–Ω –û.–î.'
            ' –°—Ç—Ä–æ–∫'
        )
    await asyncio.sleep(5)
    await send_text(message, '–¢–µ–ø–µ—Ä—å –±–ª–∏–∂–µ –∫ –¥–µ–ª—É')
    k = {'st': '–°—Ç–æ–ª—è—Ä', 'pl': '–ü–ª–æ—Ç–Ω–∏–∫', 'sel': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
         'photo': '–§–æ—Ç–æ–≥—Ä–∞—Ñ', 'waiter': '–û—Ñ–∏—Ü–∏–∞–Ω—Ç'}
    buttons = []
    for data, text in k.items():
        buttons.extend([types.InlineKeyboardButton(
            text=text, callback_data=data
        )])
    kb = types.InlineKeyboardMarkup()
    kb.add(*buttons)
    await send_text(
        message, '–ú—ã —Ç—É—Ç –≤ –æ—Ç–¥–µ–ª–µ –¥—É–º–∞–µ–º –Ω–∞–¥ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–µ–π, –ø–æ–º–æ–≥–∏ –Ω–∞–º '
        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏ –º—ã –ø–æ–¥–µ–ª–∏–º—Å—è –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.\n*–ü–æ–º–æ–≥–∏ –Ω–∞–º –≤—ã—á–∏—Å–ª–∏—Ç—å '
        '–ª–µ–≤—à—É.*'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/73ch4ccixxzqh3p/5140025df1b0bbb36e'
        'e37aa933.jpg', kb
    )


async def location_eight(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 8"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 8')
    await send_text(
        message, '–î–æ–º –ë–µ–Ω—É–∞ (—Ç–∞–∫–∂–µ –Ω–∞–∑–≤–∞—é—Ç –î–æ–º —Ç—Ä—ë—Ö –ë–µ–Ω—É–∞) ‚Äî –ø–∞–º—è—Ç–Ω–∏–∫ –∏—Å—Ç–æ—Ä–∏–∏ '
        '–∏ –∫—É–ª—å—Ç—É—Ä—ã —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. –≠—Ç–æ—Ç –¥–æ—Ö–æ–¥–Ω—ã–π –¥–æ–º –±—ã–ª –ø–æ—Å—Ç—Ä–æ–µ–Ω –ø–æ '
        '–∑–∞–∫–∞–∑—É –ü–µ—Ä–≤–æ–≥–æ –†–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞ –≤ —Å—Ç–∏–ª–µ '
        '–Ω–µ–æ–∫–ª–∞—Å—Å–∏—Ü–∏–∑–º–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É –õ. –ù. –ë–µ–Ω—É–∞, –Æ. –Æ. –ë–µ–Ω—É–∞ –∏ –ê. –ù. –ë–µ–Ω—É–∞ '
        '–ø—Ä–∏ —É—á–∞—Å—Ç–∏–∏ –ê. –ò. –ì—É–Ω—Å—Ç–∞. \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–π–∫–µ –¥–æ–º–∞ ‚Äî'
        ' 250, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–¥–Ω—ã—Ö ‚Äî 25, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–æ—Ä–æ–≤ ‚Äî '
        '12.\n–í –î–æ–º–µ –ë–µ–Ω—É–∞ –∂–∏–ª–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π. –ó–¥–µ—Å—å —Ç–≤–æ—Ä–∏–ª–∏ '
        '–∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä—ã –î. –®–æ—Å—Ç–∞–∫–æ–≤–∏—á –∏ –î. –¢–æ–ª—Å—Ç–æ–π; —Ö—É–¥–æ–∂–Ω–∏–∫–∏ –ö. –ú–∞–∫–æ–≤—Å–∫–∏–π, –õ. '
        '–°–µ—Ä–≥–µ–µ–≤–∞, –ê. –ú—ã–ª—å–Ω–∏–∫–æ–≤; –ø–∏—Å–∞—Ç–µ–ª–∏ –ú. –ß–µ—Ö–æ–≤, –í –î–æ—Ä–æ—à–µ–≤–∏—á, –ê. –ü—Ä–æ–∫–æ—Ñ—å–µ–≤.'
        ' –ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥–≤–æ—Ä–æ–≤ –∑–¥–µ—Å—å '
        '—Å–Ω–∏–º–∞–ª–æ—Å—å –∏ —Å–Ω–∏–º–∞—é—Ç—Å—è —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã. –ù–∞–ø—Ä–∏–º–µ—Ä "–ë–∞–Ω–¥–∏—Ç—Å–∫–∏–π '
        '–ü–µ—Ç–µ—Ä–±—É—Ä–≥" –∏–ª–∏ "–£–ª–∏—Ü—ã —Ä–∞–∑–±–∏—Ç—ã—Ö —Ñ–æ–Ω–∞—Ä–µ–π". –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ '
        '—Å–æ—Å–µ–¥–Ω–∏–π –¥–≤–æ—Ä –∏ –≤–æ—Ç —É–∂–µ –¥—Ä—É–≥–∞—è –ª–æ–∫–∞—Ü–∏—è –≤ —Ñ–∏–ª—å–º–µ! –¢–∞–∫–∂–µ —Ç—É—Ç —Å–Ω–∏–º–∞–ª—Å—è '
        '–∫–ª–∏–ø –≥—Ä—É–ø–ø—ã –î–î–¢ –Ω–∞ –ø–µ—Å–Ω—é "–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –∂–∏–∑–Ω—å".', hide_kb
    )
    await asyncio.sleep(5)
    await send_text(message, '–ü—Ä–æ–¥–æ–ª–∂–∏–º')
    await send_photo(
        message, 'https://www.dropbox.com/s/9zeuqf163j43l7y/%D0%A0%D0%98%D0%'
        '90%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8.jpg'
    )
    await send_text(
        message, '–ì–¥–µ-—Ç–æ –≤ —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ —Ç—Ä–µ—Ç—å–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, '
        '–ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –≤—ã—á–∏—Å–ª–∏—Ç—å'
    )
    await asyncio.sleep(10)
    await send_text(
        message, '–ü—Ä–∏—à–ª–∏ –Ω–∞–º –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ–¥–æ–≤—É—é —Ñ—Ä–∞–∑—É –∏–∑ —Ç—Ä–µ—Ö —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä–∞—è —É '
        '—Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–∞—Å—å'
    )
    await asyncio.sleep(40)
    key_help = types.InlineKeyboardButton(
        text='–ü–æ–º–æ—â—å', callback_data='help_loc_8'
    )
    kb = types.InlineKeyboardMarkup()
    kb.add(key_help)
    await edit_reply_markup(message.chat.id, message.message_id+3, kb)


async def location_nine(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 9"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'location 9')
    await send_text(
        message, '–≠—Ç–æ —Å–ª—É–∂–µ–±–Ω—ã–π —Ñ–ª–∏–≥–µ–ª—å –∏ —Å–∫—É–ª—å–ø—Ç—É—Ä–Ω–∞—è –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ '
        '1886 –≥–æ–¥–∞, –æ—Ç–ª–∏—á–∞—é—â–∞—è—Å—è –æ—Ç –≤—Å–µ—Ö –∑–¥–∞–Ω–∏–π –≤–æ–∫—Ä—É–≥ —Å–≤–æ–µ–π –≤—ã—Å–æ—Ç–æ–π.'
    )
    k = {'tamila': '–¢–∞–º–∏–ª–∞', 'jhon': '–î–∂–æ–Ω', 'bill': '–ë–∏–ª–ª', 'kevin': '–ö–µ–≤–∏–Ω'}
    buttons = []
    for data, text in k.items():
        buttons.extend([types.InlineKeyboardButton(
            text=text, callback_data=data
        )])
    kb = types.InlineKeyboardMarkup()
    kb.add(*buttons)
    await send_text(
        message, '–ò—Ç–∞–∫, –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∫–∞:\n'
        '–û–¥–∏–Ω –∏–∑ —á–∞—Å—Ç–Ω—ã—Ö –¥–µ—Ç–µ–∫—Ç–∏–≤–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–ª '
        '–Ω–∞–º –≤ –ø–æ–∏—Å–∫–∞—Ö –ú–∏—Å—Ç–µ—Ä–∞ –• –ø—Ä–æ–ø–∞–ª. –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —ç—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –µ–≥–æ '
        '–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é. –ú—ã –ø—Ä–∏–µ—Ö–∞–ª–∏ –∫ –Ω–µ–º—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –Ω–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏ '
        '–ø–æ–∏—Å–∫–æ–≤, –Ω–æ –Ω–∞—à–ª–∏ —Ç–æ–ª—å–∫–æ —Ö–∞–æ—Å –∏ –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –¥–µ—Ç–µ–∫—Ç–∏–≤–∞, '
        '–∫–∞–∫ –±—É–¥—Ç–æ —á—Ç–æ-—Ç–æ –∏—Å–∫–∞–ª–∏ –∏ –Ω–µ –º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏. –ù–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ '
        '–Ω–∞—à–µ–≥–æ –∑–Ω–∞–∫–æ–º–æ–≥–æ, –∫–æ—Ç–æ—Ä–æ–µ –∫–∞–∫ –º—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º –ø–æ—Å–µ—Ç–∏–ª –ú–∏—Å—Ç–µ—Ä –•, '
        '–º—ã –Ω–∞—à–ª–∏ 4 —Ü–∏—Ñ—Ä—ã, –Ω–æ —á—Ç–æ —ç—Ç–æ –º–æ–≥–ª–æ –±—ã –∑–Ω–∞—á–∏—Ç—å, –º—ã –Ω–µ –∑–Ω–∞–µ–º. '
        '–î—É–º–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∫–∞–∫–∞—è-—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–∑–Ω–∞—Ç—å '
        '–∫—Ç–æ –∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π —ç—Ç–æ—Ç –ú–∏—Å—Ç–µ—Ä –•. –ò —É –Ω–∞—Å –µ—Å—Ç—å —á–µ—Ç–≤–µ—Ä–æ '
        '–ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã—Ö: –¢–∞–º–∏–ª–∞ (–∏–∑—è—â–Ω–∞—è –∫–∞—Ä–º–∞–Ω–Ω–∏–∏—Ü–∞, –ø—ã—Ç–∞–µ–º—Å—è –µ—ë –ø–æ–π–º–∞—Ç—å, '
        '–Ω–æ –≤—Å–µ –≤—Ä–µ–º—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —É–ª–∏–∫), –î–∂–æ–Ω (—É–º–µ–µ—Ç –≤—Å–∫—Ä—ã–≤–∞—Ç—å –ª—é–±—ã–µ '
        '–∑–∞–º–∫–∏, –¥–∞–≤–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –±—ã–ª–æ —Å–ª—ã—à–Ω–æ –æ –Ω–µ–º), –ë–∏–ª–ª (–Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–∏–µ—Ö–∞–ª'
        ' –∫ –Ω–∞–º –≤ –≥–æ—Ä–æ–¥, —Ä–∞–Ω—å—à–µ –±—ã–ª –∑–∞–º–µ—á–µ–Ω –∑–∞ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏) '
        '–∏ –º–µ—Å—Ç–Ω—ã–π –ö–µ–≤–∏–Ω (–º–∞–ª–µ–Ω—å–∫–∏–π –≤–æ—Ä)', kb
    )


async def task_location_seven(message: types.Message, key: str) -> None:
    """–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è —Å–µ–¥—å–º–æ–π –ª–æ–∫–∞—Ü–∏–∏"""
    voc = {
        'st': '–ù–µ—Ç, –Ω–µ –≤–µ—Ä–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'pl': '–ù–µ—Ç, –Ω–µ –æ–Ω, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'sel': '–ù–µ—Ç, –Ω–µ –≤–µ—Ä–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'photo': '–ù–µ—Ç, –Ω–µ –æ–Ω, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'waiter': '–¢–æ—á–Ω–æ! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç. –õ–µ–≤—à–µ —É–¥–æ–±–Ω–µ–µ –Ω–µ—Å—Ç–∏ –ø–æ–¥–Ω–æ—Å –≤ –ø—Ä–∞–≤–æ–π '
                  '—Ä—É–∫–µ, –∞ —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –µ–¥—É –∏ –Ω–∞–ø–∏—Ç–∫–∏ –ª–µ–≤–æ–π, —Ç–∞–∫ –∫–∞–∫ –≤–µ–¥—É—â–∞—è '
                  '—Ä—É–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∞ –¥—Ä—É–≥–∞—è –ø—Ä–æ—Å—Ç–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞.'
    }
    await send_text(message, voc[key])
    if key == 'waiter':
        await send_text(
            message, '–ò –≤–æ—Ç —á—Ç–æ –Ω–∞–º –∏–∑–≤–µ—Å—Ç–Ω–æ:\n*–í —Å–ª–µ–¥—É—é—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ '
            '–±—É–¥–µ—Ç –Ω–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ* –°–ª–µ–¥—É–π –≤ *–¥–æ–º –¢—Ä–µ—Ö –ë–µ–Ω—É–∞*, '
            '–ø–æ –∞–¥—Ä–µ—Å—É *–ö–∞–º–µ–Ω–Ω–æ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç 26-28* –∏ –Ω–∞–π–¥–∏ —Ç–∞–º *–¥–≤–æ—Ä '
            '#4*'
        )
        await message.edit_reply_markup()


async def task_location_nine(message: types.Message, key: str) -> None:
    """–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è –¥–µ–≤—è—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏"""
    voc = {
        'tamila': '–ù–µ—Ç, —ç—Ç–æ —Ç–æ—á–Ω–æ –Ω–µ –æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'jhon': '–ü–æ—Ö–æ–∂–µ —á—Ç–æ —ç—Ç–æ –Ω–µ –æ–Ω. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'kevin': '–û–Ω –±—ã –Ω–∞–≤–µ—Ä–Ω–æ –Ω–µ –ø–æ—à–µ–ª –Ω–∞ —Ç–∞–∫–æ–µ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑',
        'bill': '–î–∞, —Ç–æ—á–Ω–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Ü–∏—Ñ—Ä—ã _7718_ —Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –∏–º—è'
                ' –ø–µ—Ä—Å—Ç—É–ø–Ω–∏–∫–∞ - *–ë–∏–ª–ª*.'
    }
    await send_text(message, voc[key])
    if key == 'bill':
        logging.info(f'User {message.chat.id}, {message.chat.username}'
                     ' end the quest after location 9')
        await message.edit_reply_markup()
        await send_text(
            message, '–¢–µ–ø–µ—Ä—å –æ–Ω –æ—Ç –Ω–∞—Å –Ω–µ —É–π–¥–µ—Ç! –°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –ø–æ–º–æ—â—å! '
            '–ù–∞ —ç—Ç–æ–º –∫–≤–µ—Å—Ç –ø–æ–¥–æ—à–µ–ª –∫ –∫–æ–Ω—Ü—É ü•∫'
        )
        await send_text(message, '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!')
        await send_photo(
            message, 'https://www.dropbox.com/s/cwhxxsa384prcu1/unnamed.jpg'
        )


async def first_message(message: types.Message) -> None:
    """–ü–æ–ª—É—á–∞–µ–º –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    user_sname = message.from_user.last_name
    username = message.from_user.username
    check = db.db_table_val(
        user_id=user_id, user_name=user_name,
        user_surname=user_sname, username=username
    )
    if check:
        logging.info(f'User {message.chat.id}, {message.chat.username} '
                     f'add to databse')
    await send_text(
        message, '–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!\n–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –ø—Ä–æ–π—Ç–∏ –ø–æ '
        '–ø—è—Ç–∞–º _–ú–∏—Å—Ç–µ—Ä –•_ –∏ –ø–æ–π–º–∞—Ç—å –µ–≥–æ, –ø–æ–∫–∞ —ç—Ç–æ—Ç –Ω–µ–≥–æ–¥—è–π –Ω–µ —Å–∫—Ä—ã–ª—Å—è! –î–ª—è '
        '—ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∫–ª—é—á–∏, —Ä–µ—à–∞—Ç—å –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏, '
        '—Ä–µ–±—É—Å—ã, —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —à–∏—Ñ—Ä—ã –∏ —Ç–æ–≥–¥–∞ _–ú–∏—Å—Ç–µ—Ä –•_ –±—É–¥–µ—Ç –ø–æ–≤–µ—Ä–∂–µ–Ω.'
    )
    await send_text(
        message, '–ò—Ç–∞–∫, –¥–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–º. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å '
        '–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è, –æ–Ω–∏ '
        '–Ω–∞—Ö–æ–¥—è—Ç—Å—è —É —Ç–µ–±—è –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ö–æ—Ç—É —Å–ª–µ–¥—É–π –≤ *–î–≤–æ—Ä '
        '–ù–µ–ª—å—Å–æ–Ω–∞* –ø–æ –∞–¥—Ä–µ—Å—É *–ü–æ–ª–æ–∑–æ–≤–∞ —É–ª–∏—Ü–∞ 6*. –ò –Ω–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç –∏ '
        '–≤—Å–µ —á—Ç–æ –≤ –Ω–µ–º –µ—Å—Ç—å!'
    )
    await send_text(
        message, '–Ø –∏–Ω–æ–≥–¥–∞ –∑–∞–¥—É–º—ã–≤–∞—é—Å—å –∏ –º–æ–≥—É –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç—å —Å—Ä–∞–∑—É. –ï—Å–ª–∏ —Ç—ã '
        '–æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ª–æ–∫–∞—Ü–∏—é, –∞ —è –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, —Ç–æ '
        '–æ—Ç–ø—Ä–∞–≤—å —ç—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ª–æ–∫–∞—Ü–∏—é) –º–Ω–µ –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.'
    )
    await send_text(
        message, '–ù–∞ –∫–∞–∂–¥–æ–π –∏–∑ –ª–æ–∫–∞—Ü–∏–π –µ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ, '
        '–¥–æ—Å—Ç–æ–ø—Ä–∏–ø–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –∏ –∏–∑—É—á–∏—Ç—å.'
    )
    await send_text(
        message, '–ö–∞–∫ –ø—Ä–∏–±—É–¥–µ—à—å –Ω–∞ –∫–∞–∂–¥—É—é –∏–∑ –ª–æ–∫–∞—Ü–∏–π, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ '
        '–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ. –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ *–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é*. –ï—Å–ª–∏ '
        '–µ—ë –Ω–µ—Ç, —Ç–æ —Å–º–æ—Ç—Ä–∏ –µ—ë —Ä—è–¥–æ–º —Å–æ —Å—Ç–∏–∫–µ—Ä–∞–º–∏, –∑–Ω–∞—á–æ–∫ –∫–≤–∞–¥—Ä–∞—Ç–∞ —Å —á–µ—Ç—ã—Ä–º—è '
        '–∫–≤–∞–¥—Ä–∞—Ç–∞–º–∏ –≤–Ω—É—Ç—Ä–∏'
    )
    await send_text(
        message,
        '–ö–∞–∫ –¥–æ–±–µ—Ä–µ—à—Å—è - –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá',
        markup
    )


async def right_code_phrase(message: types.Message) -> None:
    """–ü–æ–ª—É—á–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏—Ç–æ–≥–æ–≤–∞—è –∫–æ–¥–æ–≤–∞—è —Ñ—Ä–∞–∑–∞"""
    logging.info(f'From {message.chat.id}, {message.chat.username} '
                 'get right code phrase')
    await send_text(
        message, '–≠—Ç–æ —Ç–æ —á—Ç–æ –∏ –±—ã–ª–æ –Ω—É–∂–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –º–∏—Å—Å–∏–∏ –ø–æ '
        '–ø–æ–∏–º–∫–µ _–ú–∏—Å—Ç–µ—Ä–∞ –•_.'
    )
    await send_text(
        message, '–ï—Å–ª–∏ –Ω–µ—Å–ª–æ–∂–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏ –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–º –∫–≤–µ—Å—Ç–µ –ø–æ –¥–∞–Ω–Ω–æ–π'
        ' [—Å—Å—ã–ª–∫–µ](https://forms.gle/yqGWitPjn5LWiSBM9)'
    )
    await asyncio.sleep(2)
    kb = types.InlineKeyboardMarkup()
    kb.add(
        types.InlineKeyboardButton('–•–æ—á—É ü§©', callback_data='hochu'),
        types.InlineKeyboardButton('–ù–µ —Ö–æ—á—É üßê', callback_data='nehochu')
    )
    await send_text(
        message, '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —Ç–æ –º–æ–∂–µ—à—å –µ—â—ë –ø–æ–º–æ—á—å –Ω–∞–º –≤—ã—á–∏—Å–ª–∏—Ç—å –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∞ '
        '–∏ —Ä–µ—à–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–¥–∞—á–∫—É, –æ–Ω–∞ —Ç—É—Ç –Ω–µ–¥–∞–ª–µ–∫–æ. –•–æ—á–µ—à—å?', kb
    )


async def nehochu_final(message: types.Message) -> None:
    """–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ 8-–π –ª–æ–∫–∞—Ü–∏–∏, –≤ —Å–ª—É—á–∞–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞"""
    logging.info(f'User {message.chat.id}, {message.chat.username} '
                 'end the quest after location 8')
    await send_text(
        message, '–•–æ—Ä–æ—à–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–∏–º–∫–µ _–ú–∏—Å—Ç–µ—Ä–∞ X_! '
        '–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/cwhxxsa384prcu1/unnamed.jpg'
    )
    await message.edit_reply_markup()


async def hochu(message: types.Message) -> None:
    """–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ –ø–æ—Å–ª–µ 8-–π –ª–æ–∫–∞—Ü–∏–∏, –≤ —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞"""
    await send_text(
        message, '–•–æ—Ä–æ—à–æ! –¢–æ–≥–¥–∞ —Å–ª–µ–¥—É–π –Ω–∞ –ë–æ–ª—å—à–æ–π –ø—Ä–æ—Å–ø–µ–∫ –ü.–°. 71 –ª–∏—Ç –ë',
        markup
    )


async def help_loc_3(message: types.Message) -> None:
    """–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ 3"""
    await send_reply_text(
        message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π –∫—Ä—É–≥–ª—ã–π –¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä –∏–∑ –∫–æ–Ω–≤–µ—Ä—Ç–∞. –ù—É–∂–Ω–æ '
        '—á—Ç–æ–±—ã —Å–µ—Ä–¥–µ—á–∫–∏ –Ω–∞ –æ–±–æ–∏—Ö –∫—Ä—É–≥–∞—Ö —Å–æ–≤–ø–∞–ª–∏ –∏ —Ç–æ–≥–¥–∞ –∫–∞–∂–¥–∞—è —Ü–∏—Ñ—Ä–∞ –±—É–¥–µ—Ç '
        '–æ–±–æ–∑–Ω–∞—á–∞—Ç—å –Ω—É–∂–Ω—É—é –±—É–∫–≤—É', message.message_id
    )
    await message.edit_reply_markup()


async def help_loc_4(message: types.Message) -> None:
    """–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ 8"""
    await send_reply_text(
        message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–ª–æ–≤–æ —Ç–∞–∫, –∫–∞–∫ –±—ã –µ–≥–æ —Å—Ç–∞–ª —á–∏—Ç–∞—Ç—å'
        ' –∞—Ä–∞–± üë≥', message.message_id
    )
    await message.edit_reply_markup()


async def help_loc_5(message: types.Message) -> None:
    """–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ 5"""
    await send_reply_text(
        message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π —É–∂–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ *"—Å–ª–æ–≤–æ –¥–ª—è —à–∏—Ñ—Ä–∞"* –∏–∑ '
        '–≤—Ç–æ—Ä–æ–π –ª–æ–∫–∞—Ü–∏–∏ - —ç—Ç–æ _–±—É–∫–≤—ã –∫–ª—é—á–∞_ –≤ —à–∏—Ñ—Ä–µ –í–∏–∂–µ–Ω–µ—Ä–∞(–±–æ–ª—å—à–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å'
        ' –±—É–∫–≤–∞–º–∏) –∏ —Å–ª–æ–≤–æ *–ü–ë–©–¨–î–ß* - —ç—Ç–æ —Ç–µ –±—É–∫–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å –≤ '
        '—Ç–∞–±–ª–∏—Ü–µ. –ë–µ—Ä–µ—à—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∫–ª—é—á–∞, –Ω–∞—Ö–æ–¥–∏—à—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É '
        '–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –∏ –ø–æ–ª—É—á–∞–µ—à—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –ò —Ç–∞–∫'
        ' —Å –∫–∞–∂–¥–æ–π –±—É–∫–≤–æ–π. –í—Å–µ _–±—É–∫–≤—ã –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞_ –∏ –±—É–¥—É—Ç –≤—Ç–æ—Ä—ã–º –∫–æ–¥–æ–≤—ã–º'
        ' —Å–ª–æ–≤–æ–º', message.message_id
    )
    await message.edit_reply_markup()


async def help_loc_8(message: types.Message) -> None:
    """–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ 8"""
    await send_reply_text(
        message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ '
        '—á—Ç–æ–±—ã —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ', message.message_id
    )
    await message.edit_reply_markup()


async def send_text(
    message: types.Message, text: str,
    reply_markup: types.ReplyKeyboardMarkup = None,
    parse_mode: types.ParseMode = 'markdown'
) -> types.Message:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç"""
    await message.answer(
        text=text, reply_markup=reply_markup, parse_mode=parse_mode
    )


async def send_photo(
    message: types.Message, img: types.InputMediaPhoto,
    reply_markup: types.ReplyKeyboardMarkup = None
) -> types.Message:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ"""
    await message.answer_photo(photo=img, reply_markup=reply_markup)


async def send_reply_text(
    chat_id: int, text: str, reply_to_message_id: int,
    reply_markup: types.ReplyKeyboardMarkup = None,
    parse_mode: types.ParseMode = 'markdown'
) -> types.Message:
    """–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ –ø–æ–¥—Å–∫–∞–∑–∫–µ"""
    await bot.send_message(
        chat_id, text, reply_to_message_id=reply_to_message_id,
        reply_markup=reply_markup, parse_mode=parse_mode
    )


async def edit_reply_markup(
    chat_id: int, msg_id: int, reply_markup: types.ReplyKeyboardMarkup
) -> types.Message:
    """–î–æ–±–∞–≤–ª—è–µ–º Inline keyboard"""
    await bot.edit_message_reply_markup(
        chat_id=chat_id, message_id=msg_id, reply_markup=reply_markup
    )


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
