import logging
import time
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types, asyncio

load_dotenv()

API_TOKEN = os.getenv('TELEGRAM_TOKEN')
ID_MY = os.getenv('MY_ID')

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# Reply Keyboard –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
location = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)
markup.add(location)

# Inline Keyboard
kb = types.InlineKeyboardMarkup()


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    await message.reply(text=f'–ü—Ä–∏–≤–µ—Ç {message.chat.username}! –ù—É–∂–Ω–æ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å')


@dp.message_handler(content_types=['location'])
async def get_location(message: types.Message) -> None:
    """–ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞—Ü–∏—é –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ"""
    print(message)
    await choose_location(message, message.location.latitude, message.location.longitude)


@dp.message_handler(content_types=['text'])
async def get_text(message: types.Message) -> None:
    """–ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ"""
    text = message.text.lower
    if  text == '–ø—Ä–∏–≤–µ—Ç':
        await first_message(message)
    elif text == '–Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∫–∞–∂–¥—ã–º –º–æ–º–µ–Ω—Ç–æ–º':
        pass
    await message.answer(message.text)


@dp.message_handler(content_types=['sticker'])
async def get_sticker(message: types.Message):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä"""
    await message.answer_sticker(message.sticker.file_id)


@dp.callback_query_handler(lambda call: True)
async def get_callback(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –æ—Ç Inline Keyboard"""
    if call.data == 'help_loc_3':
        await help_loc_3(call.message)
    elif call.data == 'help_loc_4':
        await help_loc_4(call.message)
    elif call.data == 'help_loc_5':
        await help_loc_5(call.message)


async def choose_location(message: types.Message, lat: float, lon: float) -> None:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ª–æ–∫–∞—Ü–∏—é"""
    if 59.909 <= lat <= 59.914 and 30.304 <= lon <= 30.308:
        text = '–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è'
        await send_text(message, text)
    elif 59.9615 <= lat <= 59.9633 and 30.3023 <= lon <= 30.3056:
        await location_one(message)
    elif 59.9578 <= lat <= 59.9584 and 30.2865 <= lon <= 30.2886:
        await location_two(message)
    elif 59.9534 <= lat <= 59.954 and 30.2892 <= lon <= 30.2912:
        await location_three(message)
    elif 59.9554 <= lat <= 59.9562 and 30.298 <= lon <= 30.3:
        await location_four(message)
    elif 59.9518 <= lat <= 59.9529 and 30.2992 <= lon <= 30.3012:
        await location_five(message)
    elif 59.9513 <= lat <= 59.9523 and 30.3054 <= lon <= 30.3071:
        await location_six(message)
    elif 59.9569 <= lat <= 59.9576 and 30.315 <= lon <= 30.317:
        await location_seven(message)
    elif 59.9564 <= lat <= 59.9568 and 30.3203 <= lon <= 30.3217:
        await location_seven(message, second=True)
    elif 59.9614 <= lat <= 59.9624 and 30.3123 <= lon <= 30.3135:
        await location_eight(message)
    elif 59.9642 <= lat <= 59.9647 and 30.3108 <= lon <= 30.3118:
        await location_nine(message)
    else:
        await send_text(message, text='–ù–µ –ø–æ—Ö–æ–∂–µ —á—Ç–æ —Ç—ã –Ω–∞ –º–µ—Å—Ç–µ')


async def location_one(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 1"""
    await send_text(message, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –Ω–∞ –ø–µ—Ä–≤–æ–π –ª–æ–∫–∞—Ü–∏–∏! –≠—Ç–æ –¥–≤–æ—Ä –ù–µ–ª—å—Å–æ–Ω–∞, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã')
    await send_text(message, '–ò –≤–µ—Ä–Ω–µ–º—Å—è –∫ –¥–µ–ª—É. –ù–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –Ω–∞–º —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ _–ú–∏—Å—Ç–µ—Ä–∞ –•_:\n\n*–û–¥–Ω–∞ –∏–∑ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É –ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞ 22*')
    await send_photo(message, 'https://img.the-village.ru/4kNSEWjYk4QPhPSdbGveLGPr8CnK3wje2OCy3QrTM1Y/rs:fill:620:415/q:88/plain/post-image_featured/Dlk8pFHJKaVBTf3rd8VNrw.png')
    await send_text(message, '–ò –∫–∞–∫ –ø—Ä–∏–±—É–¥–µ—à—å –Ω–∞ –ª–æ–∫–∞—Ü–∏—é - –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá', markup)

async def location_two(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 2"""
    await send_text(message, '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ "–ü–æ–∫–æ—Ä–µ–Ω–∏–µ –Ω–µ–±–∞ –∏ –∫–æ—Å–º–æ—Å–∞"')
    await send_text(message, '–¢–∞–∫–∂–µ –ø–æ —ç—Ç–æ–π –≥–µ–æ—Ç–æ—á–∫–µ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n–°–ª–æ–≤–æ –¥–ª—è —à–∏—Ñ—Ä–∞: *"–î–∞—Ç—á–∏–∫"*\n\n–î–∞–ª—å—à–µ —Å–ª–µ–¥—É–π –≤–æ –¥–≤–æ—Ä –ø–æ –∞–¥—Ä–µ—Å—É: _–ú–∞–ª—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç –ü.–°. 1–ë_')
    await send_photo(message, 'http://risovach.ru/upload/2020/07/mem/hochu-obnimashek_244397878_orig_.jpg')
    await send_text(message, '–ö–∞–∫ –ø—Ä–∏–±—É–¥–µ—à—å –Ω–∞ –ª–æ–∫–∞—Ü–∏—é - –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá', markup)


async def location_three(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 3"""
    await send_text(message, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–æ—Å—å–º–∏—É–≥–æ–ª—å–Ω—ã–π –¥–≤–æ—Ä –∫–æ–ª–æ–¥–µ—Ü!')
    cipher_loc_3 = '–ò–¥—ë–º –ø–æ –ø—è—Ç–∞–º _–ú–∏—Å—Ç–µ—Ä–∞ –•_, –≤–æ—Ç —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:\n*5 4 30 25 10 4\n 15 14 10 25 10\n33 1 15 14 1 22 24 1 23 15 35*\n\n–ò –≤–æ—Ç –µ—â—ë:'
    await send_text(message, cipher_loc_3)
    await send_text(message, '*59.955998, 30.298809*')
    await send_photo(message, 'https://lh3.googleusercontent.com/proxy/raysuDMEM2Tpy7JR90Eqf0IGP5St_mOl3G5AlFQEOlfXNllNx9JuCrMa4TEJPmcdWR7-YRzWnccWSUJrZS-EKZaTMDo')
    key_help = types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data='help_loc_3')
    kb.add(key_help)
    await asyncio.sleep(7)
    await edit_msg(message.chat.id ,message.message_id + 2, cipher_loc_3, kb)


async def location_four(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 4"""
    await send_text(message, '–ù–∞ —É–≥–ª—É –¥–æ–º–∞ 10 –ø–æ –ë–æ–ª—å—à–æ–π –ü—É—à–∫–∞—Ä—Å–∫–æ–π –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–∞–º—è—Ç–Ω—É—é —Ç–∞–±–ª–∏—á–∫—É —Å —Ç–µ–º, –∫–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã –±—ã–ª –≤ –≥–æ—Ä–æ–¥–µ –≤ 1924 –≥–æ–¥—É')
    cipher_loc_4 = '–ú—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ç–æ –ª–æ–∫–∞—Ü–∏—è ü§îü§îü§î:\n\n*—è–æ—Ü–∞—Ä–æ—Ç–∫–∏–≤—Ä–µ–≤–∫—Å*'
    await send_text(message, cipher_loc_4)
    await send_photo(message, 'https://www.dropbox.com/s/avajjz44qfu0bdk/%D0%BF%D0%B8%D0%BA%D0%B0%D1%87%D1%83.jpg')
    await asyncio.sleep(30)
    key_help = types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data='help_loc_4')
    kb.add(key_help)
    await edit_msg(message.chat.id, message.message_id + 2, cipher_loc_4, kb)


async def location_five(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 5"""
    await send_text(
        message, '–¢—ã –Ω–∞ –º–µ—Å—Ç–µ! –≠—Ç–æ —Å–∫–≤–µ—Ä –í–∏–∫—Ç–æ—Ä–∞ –¶–æ—è. \n _–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–≤–µ—Ä—É '
        '–±—ã–ª–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ 20 —Å–µ–Ω—Ç—è–±—Ä—è 2012 –≥–æ–¥–∞. –°–∫–≤–µ—Ä –±—ã–ª –≤—ã–±—Ä–∞–Ω –≤ —Å–≤—è–∑–∏ —Å —Ç–µ–º,'
        ' —á—Ç–æ –ø–µ–≤–µ—Ü –í–∏–∫—Ç–æ—Ä –¶–æ–π —Ç—Ä—É–¥–∏–ª—Å—è –Ω–µ–ø–æ–¥–∞–ª–µ–∫—É ‚Äî –≤ –∫–æ—Ç–µ–ª—å–Ω–æ–π ¬´–ö–∞–º—á–∞—Ç–∫–∞¬ª '
        '(—É–ª–∏—Ü–∞ –ë–ª–æ—Ö–∏–Ω–∞ 15, —Å–æ–≤–µ—Ç—É—é –∑–∞–π—Ç–∏ –≤ —ç—Ç–æ—Ç –¥–≤–æ—Ä, —ç—Ç–æ –≤ —Å—Ç–∞ –º–µ—Ç—Ä–∞—Ö '
        '–æ—Ç—Å—é–¥–∞). –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ —Å–∫–≤–µ—Ä —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –∫—Ä—ã—à–µ '
        '–±–æ–º–±–æ—É–±–µ–∂–∏—â–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ –æ–∫–æ–ª–æ 1,5 –º–µ—Ç—Ä–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ–∫—Ä—É–∂–∞—é—â–µ–≥–æ '
        '–ª–∞–Ω–¥—à–∞—Ñ—Ç–∞. –ü–æ—Å–ª–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è —Å–∫–≤–µ—Ä—É –∏–º–µ–Ω–∏ –í–∏–∫—Ç–æ—Ä–∞ –¶–æ—è –æ–Ω –Ω–µ —Ä–∞–∑ '
        '—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ø–ª–æ—â–∞–¥–∫–æ–π —É–ª–∏—á–Ω—ã—Ö —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ–π._ @wikipedia\n–¢–∞–∫–∂–µ, –µ—Å–ª–∏ '
        '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∫–≤–µ—Ä —Å–≤–µ—Ä—Ö—É, –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å–∫—Ä–∏–ø–∏—á–Ω—ã–π –∫–ª—é—á (–≤ '
        '–∑–µ—Ä–∫–∞–ª—å–Ω–æ–º –æ—Ç—Ä–∞–∂–µ–Ω–∏–∏).'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/1ltnn9icltrd3xp/%D1%81%D0%BA%D0%B2'
        '%D0%B5%D1%80%20%D0%B2%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%B0%20%D1%86%D0'
        '%BE%D1%8F.jpg')
    cipher_loc_5 = '–í—Ç–æ—Ä–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: *–ü–ë–©–¨–î–ß*'
    await send_text(message, cipher_loc_5)
    await send_text(
        message, '–≠—Ç–æ –≤—Å–µ —á—Ç–æ –µ—Å—Ç—å, –ø–æ–ø—Ä–æ–±—É–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏, '
        '–∫–æ—Ç–æ—Ä—ã–µ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å, —á—Ç–æ–±—ã —Ä–∞–∑–≥–∞–¥–∞—Ç—å'
    )
    await asyncio.sleep(10)
    await send_text(
        message, '–°–ª–µ–¥—É—é—â–∞—è –ª–æ–∫–∞—Ü–∏—è –ú–∏—Å—Ç–µ—Ä–∞ –• –Ω–∞—Ö–æ–¥–∏—Ç—Å—è *–Ω–∞ –≤—Ö–æ–¥–µ –≤ '
        '–≠–∫–∑–æ—Ç–∞—Ä–∏—É–º*'
    )
    await send_photo(
        message, 'https://upload.wikimedia.org/wikipedia/commons/4/4d/Zoo_SPB_'
        'entrance.jpg'
    )
    await asyncio.sleep(40)
    key_help = types.InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data='help_loc_5')
    kb.add(key_help)
    await edit_msg(message.chat.id, message.message_id + 3, cipher_loc_5, kb)


async def location_six(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 6"""
    await send_text(
        message, '–≠—Ç–æ –æ–¥–Ω–∏ –∏–∑ –≤—Ö–æ–¥–æ–≤ –≤ –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫. –ò—Å—Ç–æ—Ä–∏—è –∑–≤–µ—Ä–∏–Ω—Ü–∞'
        ' –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ 1865 –≥–æ–¥—É, –∫–æ–≥–¥–∞ –ª—é–±–∏—Ç–µ–ª–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö –°–æ—Ñ—å—è –∏ –Æ–ª–∏—É—Å '
        '–ì–µ–±–≥–∞—Ä–¥—Ç –æ—Ç–∫—Ä—ã–ª–∏ –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞. –ó–∞—Ç–µ–º –æ–Ω —Å–º–µ–Ω–∏–ª '
        '–º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∞—Å—Ç–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –≤ 1918 –≥–æ–¥—É –∑–æ–æ—Å–∞–¥ –±—ã–ª '
        '–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í–æ –≤—Ä–µ–º—è –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ '
        '–∑–æ–æ—Å–∞–¥–∞ –≤ —Ç—è–∂–µ–ª–µ–π—à–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –Ω–µ –ø—Ä–µ–∫—Ä–∞—â–∞–ª–∏ —Ä–∞–±–æ—Ç—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ '
        '–∂–∏–≤–æ—Ç–Ω—ã—Ö.\n–≠—Ç–æ –æ–¥–∏–Ω –∏–∑ —Å–µ—Ä–µ–≤–Ω—ã—Ö –∑–æ–æ–ø–∞—Ä–∫–æ–≤ –º–∏—Ä–∞, –≥–¥–µ —Å–æ–¥–µ—Ä–∞–∂—Ç—Å—è –æ–∫–æ–ª–æ '
        '600 –≤–∏–¥–æ–≤ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏—Ö, –ø—Ç–∏—Ü, —Ä—ã–± –∏ –±–µ—Å–ø–æ–∑–≤–æ–Ω–æ—á–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤'
        ' –ó–µ–º–ª–∏.'
    )
    await send_text(
        message, '–ò—Ç–∞–∫, –≤–µ—Ä–Ω–µ–º—Å—è –∫ –ø–æ–∏—Å–∫—É. –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —à–∏—Ñ—Ä —Å –∫–≤–∞–¥—Ä–∞—Ç–∞–º–∏, '
        '—Ä–∞—Å—Å—Ç–∞–≤—å –Ω–∞ –Ω–µ–º —Ñ–∏–≥—É—Ä—ã —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –∫–∞–∂–¥–æ–º —Å—Ç–æ–ª–±—Ü–µ, —Å—Ç—Ä–æ–∫–µ –∏ –≤ –∫–∞–∂–¥–æ–º'
        ' –∫–≤–∞–¥—Ä–∞—Ç–µ —Å –¥–≤–æ–π–Ω–æ–π –≥—Ä–∞–Ω–∏—Ü–µ–π –±—ã–ª–∏ —Ä–∞–∑–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã, –∫–∞–∫ –≤ *—Å—É–¥–æ–∫—É*, '
        '—Ç–æ–ª—å–∫–æ —Å —Ñ–∏–≥—É—Ä–∞–º–∏. –û—Å—Ç—Ä–∏–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–Ω—ã —Å–º–æ—Ç—Ä–µ—Ç—å –≤–≤–µ—Ä—Ö. –ó–∞—Ç–µ–º '
        '—Å–æ–ø–æ—Å—Ç–∞–≤—å —Å—É–¥–æ–∫—É —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ –ø–æ–¥—Å–∫–∞–∂—É—Ç —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â–µ–µ '
        '–º–µ—Å—Ç–æ, –∫—É–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è.'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/nnhduqih57oq5x4/%D0%91%D0%B5%D0%B7'
        '%D1%8B%D0%BC%D1%8F%D0%BD%D0%BD%D1%8B%D0%B9%201.jpg'
    )


async def location_seven(message: types.Message, second: bool=False) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 7"""
    if not second:
        await send_text(
            message, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –≠—Ç–æ –∏ –µ—Å—Ç—å —Ç–∞ —Ç–æ—á–∫–∞! –≠—Ç–æ –ø–æ—Å—Ç—Ä–æ–π–∫–∞ 1953 –≥. –æ —á–µ–º '
            '—Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É–µ—Ç –¥–∞—Ç–∞ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–æ–Ω–µ.'
        )
    elif second:
        await send_text(
            message, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –≠—Ç–æ –∏ –µ—Å—Ç—å —Ç–∞ —Ç–æ—á–∫–∞! –≠—Ç–æ –ø–æ—Å—Ç—Ä–æ–π–∫–∞ 1879 –≥., –≤'
            ' —ç—Ç–æ–º –¥–æ–º–µ, –≤ —Ä–∞–∑—ã–Ω–µ –ø–µ—Ä–∏–æ–¥—ã –∂–∏–ª–∏: –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –ì. –í. –í–æ–π–Ω–µ–≤–∏—á, –∞ '
            '—Ç–∞–∫–∂–µ –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä, –º—É–∑—ã–∫–∞–Ω—Ç, –∞–≤—Ç–æ—Ä —Å–ª–æ–≤ –∏ –º—É–∑—ã–∫–∏ –º–Ω–æ–≥–∏—Ö –ø–µ—Å–µ–Ω –û.–î.'
            ' –°—Ç—Ä–æ–∫'
        )
    await asyncio.sleep(5)
    await send_text(message, '–¢–µ–ø–µ—Ä—å –±–ª–∏–∂–µ –∫ –¥–µ–ª—É')
    k = {'st': '–°—Ç–æ–ª—è—Ä', 'pl': '–ü–ª–æ—Ç–Ω–∏–∫', 'sel': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
         'photo': '–§–æ—Ç–æ–≥—Ä–∞—Ñ', 'waiter': '–û—Ñ–∏—Ü–∏–∞–Ω—Ç'}
    # kb = types.InlineKeyboardMarkup()
    buttons = []
    for data, text in k.items():
        buttons.extend([types.InlineKeyboardButton(text=text, callback_data=data)])
    kb.add(*buttons)
    await send_text(
        message, '–ú—ã —Ç—É—Ç –≤ –æ—Ç–¥–µ–ª–µ –¥—É–º–∞–µ–º –Ω–∞–¥ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–µ–π, –ø–æ–º–æ–≥–∏ –Ω–∞–º '
        '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏ –º—ã –ø–æ–¥–µ–ª–∏–º—Å—è –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.\n*–ü–æ–º–æ–≥–∏ –Ω–∞–º –≤—ã—á–∏—Å–ª–∏—Ç—å '
        '–ª–µ–≤—à—É.*'
    )
    await send_photo(
        message, 'https://www.dropbox.com/s/73ch4ccixxzqh3p/5140025df1b0bbb36e'
        'e37aa933.jpg', kb
    )


async def location_eight(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 8"""
    text = f'–õ–æ–∫–∞—Ü–∏—è 8 {message.location.latitude}, {message.location.longitude}'
    await send_text(message, text)


async def location_nine(message: types.Message) -> None:
    """–õ–æ–∫–∞—Ü–∏—è 9"""
    text = f'–õ–æ–∫–∞—Ü–∏—è 9 {message.location.latitude}, {message.location.longitude}'
    await send_text(message, text)


async def first_message(message: types.Message) -> None:
    """–ü–æ–ª—É—á–∞–µ–º –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    await send_text(message, '–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!\n–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –ø—Ä–æ–π—Ç–∏ –ø–æ –ø—è—Ç–∞–º _–ú–∏—Å—Ç–µ—Ä –•_ –∏ –ø–æ–π–º–∞—Ç—å –µ–≥–æ, –ø–æ–∫–∞ —ç—Ç–æ—Ç –Ω–µ–≥–æ–¥—è–π –Ω–µ —Å–∫—Ä—ã–ª—Å—è! –î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∫–ª—é—á–∏, —Ä–µ—à–∞—Ç—å –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏, —Ä–µ–±—É—Å—ã, —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —à–∏—Ñ—Ä—ã –∏ —Ç–æ–≥–¥–∞ _–ú–∏—Å—Ç–µ—Ä –•_ –±—É–¥–µ—Ç –ø–æ–≤–µ—Ä–∂–µ–Ω.')
    await send_text(message, '–ò—Ç–∞–∫, –¥–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–º. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è, –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —É —Ç–µ–±—è –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ö–æ—Ç—É —Å–ª–µ–¥—É–π –≤ *–î–≤–æ—Ä –ù–µ–ª—å—Å–æ–Ω–∞* –ø–æ –∞–¥—Ä–µ—Å—É *–ü–æ–ª–æ–∑–æ–≤–∞ —É–ª–∏—Ü–∞ 6*. –ò –Ω–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç –∏ –≤—Å–µ —á—Ç–æ –≤ –Ω–µ–º –µ—Å—Ç—å!')
    await send_text(message, '–Ø –∏–Ω–æ–≥–¥–∞ –∑–∞–¥—É–º—ã–≤–∞—é—Å—å –∏ –º–æ–≥—É –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç—å —Å—Ä–∞–∑—É. –ï—Å–ª–∏ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ —è –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å —ç—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–Ω–µ –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')
    await send_text(message, '–ù–∞ –∫–∞–∂–¥–æ–π –∏–∑ –ª–æ–∫–∞—Ü–∏–π –µ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ, –¥–æ—Å—Ç–æ–ø—Ä–∏–ø–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –∏ –∏–∑—É—á–∏—Ç—å.')
    await send_text(message, '–ö–∞–∫ –ø—Ä–∏–±—É–¥–µ—à—å –Ω–∞ –∫–∞–∂–¥—É—é –∏–∑ –ª–æ–∫–∞—Ü–∏–π, —Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ. –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ *–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é*. –ï—Å–ª–∏ –µ—ë –Ω–µ—Ç, —Ç–æ —Å–º–æ—Ç—Ä–∏ –µ—ë —Ä—è–¥–æ–º —Å–æ —Å—Ç–∏–∫–µ—Ä–∞–º–∏, –∑–Ω–∞—á–æ–∫ –∫–≤–∞–¥—Ä–∞—Ç–∞ —Å —á–µ—Ç—ã—Ä–º—è –∫–≤–∞–¥—Ä–∞—Ç–∞–º–∏ –≤–Ω—É—Ç—Ä–∏')
    await send_text(message, '–ö–∞–∫ –¥–æ–±–µ—Ä–µ—à—Å—è - –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá', markup)


async def help_loc_3(message):
    await send_reply_text(message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π –∫—Ä—É–≥–ª—ã–π –¥–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä –∏–∑ –∫–æ–Ω–≤–µ—Ä—Ç–∞. –ù—É–∂–Ω–æ —á—Ç–æ–±—ã —Å–µ—Ä–¥–µ—á–∫–∏ –Ω–∞ –æ–±–æ–∏—Ö –∫—Ä—É–≥–∞—Ö —Å–æ–≤–ø–∞–ª–∏ –∏ —Ç–æ–≥–¥–∞ –∫–∞–∂–¥–∞—è —Ü–∏—Ñ—Ä–∞ –±—É–¥–µ—Ç –æ–±–æ–∑–Ω–∞—á–∞—Ç—å –Ω—É–∂–Ω—É—é –±—É–∫–≤—É', message.message_id)
    await message.edit_reply_markup()


async def help_loc_4(message):
    await send_reply_text(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–ª–æ–≤–æ —Ç–∞–∫, –∫–∞–∫ –±—ã –µ–≥–æ —Å—Ç–∞–ª —á–∏—Ç–∞—Ç—å –∞—Ä–∞–± üë≥', message.message_id)
    await message.edit_reply_markup()


async def help_loc_5(message):
    await send_reply_text(
        message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π —É–∂–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ *"—Å–ª–æ–≤–æ –¥–ª—è —à–∏—Ñ—Ä–∞"* –∏–∑ '
        '–≤—Ç–æ—Ä–æ–π –ª–æ–∫–∞—Ü–∏–∏ - —ç—Ç–æ _–±—É–∫–≤—ã –∫–ª—é—á–∞_ –≤ —à–∏—Ñ—Ä–µ –í–∏–∂–µ–Ω–µ—Ä–∞(–±–æ–ª—å—à–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å'
        ' –±—É–∫–≤–∞–º–∏) –∏ —Å–ª–æ–≤–æ *–ü–ë–©–¨–î–ß* - —ç—Ç–æ —Ç–µ –±—É–∫–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å –≤ '
        '—Ç–∞–±–ª–∏—Ü–µ. –ë–µ—Ä–µ—à—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∫–ª—é—á–∞, –Ω–∞—Ö–æ–¥–∏—à—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É '
        '–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –∏ –ø–æ–ª—É—á–∞–µ—à—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –ò —Ç–∞–∫'
        ' —Å –∫–∞–∂–¥–æ–π –±—É–∫–≤–æ–π. –í—Å–µ _–±—É–∫–≤—ã –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞_ –∏ –±—É–¥—É—Ç –≤—Ç–æ—Ä—ã–º –∫–æ–¥–æ–≤—ã–º'
        ' —Å–ª–æ–≤–æ–º', message.message_id
    )
    await message.edit_reply_markup()


async def help_loc_8(call):
    pass


async def send_text(message: types.Message, text: str, reply_markup: types.ReplyKeyboardMarkup=None, parse_mode: types.ParseMode='markdown') -> types.Message:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç"""
    await message.answer(text=text, reply_markup=reply_markup, parse_mode=parse_mode)


async def send_photo(message: types.Message, img: types.InputMediaPhoto, reply_markup=None) -> types.Message:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ"""
    await message.answer_photo(photo=img, reply_markup=reply_markup)


async def send_reply_text(chat_id, text, reply_to_message_id, reply_markup = None, parse_mode = 'markdown'):
    await bot.send_message(chat_id, text, reply_to_message_id=reply_to_message_id, reply_markup=reply_markup, parse_mode=parse_mode)


async def edit_msg(chat_id, msg_id, text, reply_markup = None, parse_mode = 'markdown'):
    await bot.edit_message_text(chat_id=chat_id ,message_id=msg_id, text=text, reply_markup=reply_markup, parse_mode=parse_mode)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
